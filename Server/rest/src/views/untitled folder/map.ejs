<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Sensors</title>
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
	margin-left:auto; 
	margin-right:auto;
	position:relative;
	border: 2px solid #000000;
        height: 75%;
	width: 75%;
	top: 3%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
  </head>
<h1 align="center">Sensor Location</h1>
  <body background="/images/temp_bg.jpg">
    <div id="map"></div>
    <script src="https://d3js.org/d3.v4.min.js"></script>
    <script>
      function initMap() {

        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 7,
          center: {lat: 18.516726, lng: 73.856255}
        });

      // Create an array of alphabetical characters used to label the markers.
      var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';

      // Add some markers to the map.
      // Note: The code uses the JavaScript Array.prototype.map() method to
      // create an array of markers based on a given "locations" array.
      // The map() method here has nothing to do with the Google Maps API.
      var locations = [];
      var url = 'http://192.168.43.76:3000/coordinates';

      d3.json(url, function(error, pop) {
          if (error) throw error;
          for (var prop in pop) {
            if (pop.hasOwnProperty(prop)) {
            // or if (Object.prototype.hasOwnProperty.call(obj,prop)) for safety...
            // console.log("prop: " + prop + " value: " + pop[prop])
               locations.push(pop[prop]);
            }
          }
        //  console.log(locations);
    //});

    var markers = locations.map(function(location, i) {
      return new google.maps.Marker({
        position: location,
        label: labels[i % labels.length]
      });
    });

    // Add a marker clusterer to manage the markers.
    var markerCluster = new MarkerClusterer(map, markers,
    {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});

    });

    }
    </script>
    <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js">
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDHc8CB7b-1DWci_jimnGuWyASJn74yseA&callback=initMap">
    </script>
  </body>
</html>
